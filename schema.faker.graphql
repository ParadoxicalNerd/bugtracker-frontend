scalar Date

type Project {
  id: ID
  name: String @fake(type:productName)
  description: String @fake(type:productCategory)
  createdBy: User
  associatedUsers: [User] @listLength(min:1, max:3) 
  tickets: [Ticket]  @listLength(min:3, max:12)
  creationDate: Date @fake(type:pastDate)
  updateDate: Date @fake(type:recentDate)
}

type  Ticket {
  id:ID
  title: String @fake(type:colorName)
  description: String @fake(type:colorHex)
  ofType: String @examples(values:["BUG", "FEATURE", "DOCS"])
  status: String @examples(values:["OPEN", "ASSIGNED", "TESTING", "RESOLVED"])
  priority: String @examples(values:["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"])
  project: Project!
  createdBy: User!
  assignedTo: User
  comments: [Comment] @listLength(min:2, max:4)
  changeLog: [String]
  creationDate: Date @fake(type:pastDate)
  updateDate: Date @fake(type:recentDate)
}

type User {
  id:ID
  name: String @fake(type:fullName)
  email: String @fake(type:email)
  ofType: String @examples(values:["FILTER", "PROGRAMMER", "TESTER"])
  tickets: [Ticket] @listLength(min:10, max:30)
  creationDate: Date @fake(type:pastDate)
  updateDate: Date @fake(type:recentDate) 
}

type Comment {
  id: ID
  message: String @examples (values:["Add examples", "Some massive issue has been fixed", "Need admin to look into rights"])
  creationDate: Date @fake(type:recentDate)
  createdBy: User
}

type Query {
  project(id:ID): Project
  ticket(id:ID): Ticket
  user(id:ID): User
  allProjects:[Project!]
}