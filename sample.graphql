# This is sample SDL schema for GraphQL Faker.
#
# There are two directives you can use to enhance fake data:
#   - @fake
#   - @examples
# Each directive has autocompletion working so start by typing @
#
# Press save or Cmd+Enter to apply the changes and update server. Switch to GraphiQL
# on the left panel to immediately test your changes.
# This tool also supports extending existing APIs. Check graphql-faker --help
#
# Developed with ❤️ by APIs.guru | https://github.com/APIs-guru/graphql-faker

type Project {
  id: ID
  name: String @fake(type:productName)
  description: String @fake(type:productCategory)
  createdBy: [User!] @listLength(min:0, max:3)
  associatedUsers: [User] @listLength(min:0, max:3)
  tickets: [Ticket]
}

type  Ticket {
  id:ID
  title: String @fake(type:colorName)
  description: String @fake(type:colorHex)
  ofType: String @examples(values:["BUG", "FEATURE", "DOCS"])
  status: String @examples(values:["OPEN", "ASSIGNED", "TESTING", "RESOLVED"])
  priority: String @examples(values:["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"])
  project: Project!
  createdBy: [User!]
  assignedTo: [User]
  comments: [String]
  changeLog: [String]
}

type User {
  id:ID
  name: String @fake(type:fullName)
  ofType: String @examples(values:["FILTER", "PROGRAMMER", "TESTER"])
  tickets: [Ticket]
}

# type Company {
#   id: ID
#   name: String @fake(type: companyName)
#   industry: String
#     @examples(values: ["IT", "Manufacturing", "Medicine", "Media"])
#   employees: [Employee!] @listLength(min: 5, max: 10)
# }

# type Employee {
#   id: ID
#   firstName: String @fake(type: firstName, locale: en_CA)
#   lastName: String @fake(type: lastName, locale: en_CA)
#   address: String @fake(type: streetAddress, options: { useFullAddress: true })
#   subordinates: [Employee!] @listLength(min: 0, max: 3)
#   company: Company
# }

type Query {
  # employee(id: ID): Employee
  # company(id: ID): Company
  # allCompanies: [Company!]
  project(id:ID): Project
  ticket(id:ID): Ticket
  user(id:ID): User
}
